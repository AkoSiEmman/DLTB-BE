import mongoose from "mongoose";
declare const TORTripModel: mongoose.Model<{
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
}, {}, {}, {}, mongoose.Document<unknown, {}, {
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
}> & Omit<{
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
} & {
    _id: mongoose.Types.ObjectId;
}, never>, mongoose.Schema<any, mongoose.Model<any, any, any, any, any, any>, {}, {}, {}, {}, mongoose.DefaultSchemaOptions, {
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
}, mongoose.Document<unknown, {}, mongoose.FlatRecord<{
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
}>> & Omit<mongoose.FlatRecord<{
    fieldData: mongoose.Types.DocumentArray<{
        UUID: string;
        route: string;
        device_id: string;
        control_no: string;
        tor_no: string;
        date_of_trip: string;
        bus_no: string;
        route_code: string;
        ticket_revenue_atm: number;
        ticket_count_atm: number;
        ticket_revenue_atm_passenger: number;
        ticket_revenue_atm_baggage: number;
        ticket_count_atm_passenger: number;
        ticket_count_atm_baggage: number;
        ticket_revenue_punch: number;
        ticket_count_punch: number;
        ticket_revenue_punch_passenger: number;
        ticket_revenue_punch_baggage: number;
        ticket_count_punch_passenger: number;
        ticket_count_punch_baggage: number;
        ticket_revenue_charter: number;
        ticket_count_charter: number;
        ticket_revenue_waybill: number;
        ticket_count_waybill: number;
        ticket_revenue_card: string;
        ticket_count_card: string;
        ticket_revenue_reserved: string;
        ticket_count_reserved: string;
        ticket_amount_cancelled: number;
        ticket_count_cancelled: number;
        ticket_amount_passes: string;
        ticket_count_passes: string;
        passenger_revenue: number;
        baggage_revenue: number;
        gross_revenue: number;
        passenger_count: number;
        baggage_count: number;
        bound: string;
        trip_no: number;
        from_km: number;
        to_km: number;
        km_run: number;
        departed_place: string;
        departed_time: string;
        departed_dispatcher_id: string;
        departed_dispatcher: string;
        arrived_place: string;
        arrived_time: string;
        arrived_dispatcher_id: string;
        arrived_dispatcher: string;
        departure_timestamp: string;
        departure_lat: string;
        departure_long: string;
    }>;
    recordId?: string | undefined;
    modId?: string | undefined;
    portalId?: any;
}> & {
    _id: mongoose.Types.ObjectId;
}, never>>>;
export default TORTripModel;
