import mongoose from "mongoose";
declare const TORFuelModel: mongoose.Model<{
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
}, {}, {}, {}, mongoose.Document<unknown, {}, {
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
}> & {
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
} & {
    _id: mongoose.Types.ObjectId;
}, mongoose.Schema<any, mongoose.Model<any, any, any, any, any, any>, {}, {}, {}, {}, mongoose.DefaultSchemaOptions, {
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
}, mongoose.Document<unknown, {}, mongoose.FlatRecord<{
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
}>> & mongoose.FlatRecord<{
    recordId: string;
    modId: string;
    fieldData: mongoose.Types.DocumentArray<{
        route: string;
        device_id: string;
        control_no: string;
        date_of_trip: Date;
        bus_no: string;
        route_code: string;
        remarks: string;
        bound: string;
        trip_no: number;
        timestamp: Date;
        lat: string;
        long: string;
        refuel_date: Date;
        refuel_time: string;
        fuel_station: string;
        fuel_liters: number;
        fuel_amount: number;
        fuel_price_per_liter: number;
        fuel_attendant_id: number;
        fuel_attendant: string;
        full_tank: string;
        UUID?: string | undefined;
    }>;
    portalData?: any;
}> & {
    _id: mongoose.Types.ObjectId;
}>>;
export default TORFuelModel;
